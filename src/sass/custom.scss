// Custom.scss
// Option B: Include parts of Bootstrap

// 1. Include functions first (so you can manipulate colors, SVGs, calc, etc)
@import "../../node_modules/bootstrap/scss/functions";

// 2. Include any default variable overrides here
$font-family-sans-serif: "Nunito", serif;

// 3. Include remainder of required Bootstrap stylesheets (including any separate color mode stylesheets)
@import "../../node_modules/bootstrap/scss/variables";
@import "../../node_modules/bootstrap/scss/variables-dark";

// 4. Include any default map overrides here

/* $custom-colors: (
  // Primary
  "soft-red": hsl(7, 99%, 70%),
  "yellow": hsl(51, 100%, 49%),
  "cyan": hsl(168, 34%, 41%),
  "dark-cyan": hsl(167, 40%, 24%),
  "dark-blue": hsl(198, 62%, 26%),
  //Neutral
  "grayish-blue": hsl(210, 4%, 67%),
  "grayish-dark-blue": hsl(232, 10%, 55%),
  "veryDark-grayish-blue": hsl(213, 9%, 39%),
  "veryDark-desatured-blue": hsl(212, 27%, 19%)
); */

$custom-colors: (
  // Primary
  "Light-red": hsl(356, 100%, 66%),
  "Very-light-red": hsl(355, 100%, 74%),
  "Very-dark-blue": hsl(208, 49%, 24%),
  //Neutral
  "Grayish-blue": hsl(240, 2%, 79%),
  "Very-dark-grayish-blue": hsl(207, 13%, 34%),
  "Very-dark-black-blue": hsl(240, 10%, 16%)
);

$theme-colors: map-merge($theme-colors, $custom-colors);

// 5. Include remainder of required parts
@import "../../node_modules/bootstrap/scss/maps";
@import "../../node_modules/bootstrap/scss/mixins";
@import "../../node_modules/bootstrap/scss/root";

// 6. Optionally include any other parts as needed
@import "../../node_modules/bootstrap/scss/utilities";

$all-colors: map-merge-multiple(
  $blues,
  $indigos,
  $purples,
  $pinks,
  $reds,
  $oranges,
  $yellows,
  $greens,
  $teals,
  $cyans
);

$utilities: map-merge(
  $utilities,
  (
    "color":
      map-merge(
        map-get($utilities, "color"),
        (
          values:
            map-merge(
              map-get(map-get($utilities, "color"), "values"),
              ($all-colors)
            ),
        )
      ),
    "background-color":
      map-merge(
        map-get($utilities, "background-color"),
        (
          values:
            map-merge(
              map-get(map-get($utilities, "background-color"), "values"),
              ($all-colors)
            ),
        )
      ),
  )
);

@import "../../node_modules/bootstrap/scss/reboot";
@import "../../node_modules/bootstrap/scss/type";
@import "../../node_modules/bootstrap/scss/images";
@import "../../node_modules/bootstrap/scss/containers";
@import "../../node_modules/bootstrap/scss/grid";
@import "../../node_modules/bootstrap/scss/helpers";
@import "../../node_modules/bootstrap/scss/navbar";
@import "../../node_modules/bootstrap/scss/nav";
@import "../../node_modules/bootstrap/scss/transitions";
@import "../../node_modules/bootstrap/scss/forms";
@import "../../node_modules/bootstrap/scss/buttons";
@import "../../node_modules/bootstrap/scss/modal";
@import "../../node_modules/bootstrap/scss/close";

// 7. Optionally include utilities API last to generate classes based on the Sass map in `_utilities.scss`
@import "../../node_modules/bootstrap/scss/utilities/api";

// 8. Add additional custom code here
#logo{
  width: 40%;
  height: 40%;
}
.banner{
  background-color: rgba(140,183,104,255) ;
}

footer {
  background-image: url(../../src/images/footer.jpg);
  background-size: cover;
  background-repeat: no-repeat;
 
}

.filtrado{
  background-color: rgba(140,183,104,255);
}

a {
  text-decoration: none;
  margin-right: 20px;
 
}